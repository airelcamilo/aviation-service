// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"aviation-service/internal/dto"
	"aviation-service/internal/service"
	"context"
	"sync"
)

// Ensure, that IWeatherServiceMock does implement service.IWeatherService.
// If this is not the case, regenerate this file with moq.
var _ service.IWeatherService = &IWeatherServiceMock{}

// IWeatherServiceMock is a mock implementation of service.IWeatherService.
//
//	func TestSomethingThatUsesIWeatherService(t *testing.T) {
//
//		// make and configure a mocked service.IWeatherService
//		mockedIWeatherService := &IWeatherServiceMock{
//			GetWeatherFunc: func(ctx context.Context, city string) (*dto.Weather, error) {
//				panic("mock out the GetWeather method")
//			},
//		}
//
//		// use mockedIWeatherService in code that requires service.IWeatherService
//		// and then make assertions.
//
//	}
type IWeatherServiceMock struct {
	// GetWeatherFunc mocks the GetWeather method.
	GetWeatherFunc func(ctx context.Context, city string) (*dto.Weather, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetWeather holds details about calls to the GetWeather method.
		GetWeather []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// City is the city argument value.
			City string
		}
	}
	lockGetWeather sync.RWMutex
}

// GetWeather calls GetWeatherFunc.
func (mock *IWeatherServiceMock) GetWeather(ctx context.Context, city string) (*dto.Weather, error) {
	if mock.GetWeatherFunc == nil {
		panic("IWeatherServiceMock.GetWeatherFunc: method is nil but IWeatherService.GetWeather was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		City string
	}{
		Ctx:  ctx,
		City: city,
	}
	mock.lockGetWeather.Lock()
	mock.calls.GetWeather = append(mock.calls.GetWeather, callInfo)
	mock.lockGetWeather.Unlock()
	return mock.GetWeatherFunc(ctx, city)
}

// GetWeatherCalls gets all the calls that were made to GetWeather.
// Check the length with:
//
//	len(mockedIWeatherService.GetWeatherCalls())
func (mock *IWeatherServiceMock) GetWeatherCalls() []struct {
	Ctx  context.Context
	City string
} {
	var calls []struct {
		Ctx  context.Context
		City string
	}
	mock.lockGetWeather.RLock()
	calls = mock.calls.GetWeather
	mock.lockGetWeather.RUnlock()
	return calls
}
